/**
 *
 * $Id$
 */
package ros.validation;

import org.eclipse.emf.common.util.EList;

import ros.ActionClient;
import ros.ActionServer;
import ros.Parameter;
import ros.Publisher;
import ros.ServiceClient;
import ros.ServiceServer;
import ros.Subscriber;

/**
 * A sample validator interface for {@link ros.Node}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface NodeValidator {
	boolean validate();

	boolean validateServiceserver(EList<ServiceServer> value);
	boolean validatePublisher(EList<Publisher> value);
	boolean validateSubscriber(EList<Subscriber> value);
	boolean validateServiceclient(EList<ServiceClient> value);
	boolean validateActionserver(EList<ActionServer> value);
	boolean validateActionclient(EList<ActionClient> value);
	boolean validateName(String value);
	boolean validateParameter(EList<Parameter> value);
}
