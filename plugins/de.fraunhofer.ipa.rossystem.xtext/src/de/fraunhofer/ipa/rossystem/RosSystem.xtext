// automatically generated by Xtext
grammar de.fraunhofer.ipa.rossystem.RosSystem with org.eclipse.xtext.common.Terminals

import "http://www.ipa.fraunhofer.de/rossystem" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.ipa.fraunhofer.de/componentInterface" as componentInterface
import "http://www.ipa.fraunhofer.de/ros" as ros
import "http://www.eclipse.org/emf/2003/XMLType" as type


RosSystem returns RosSystem:
	{RosSystem}
	'RosSystem'
	'{'
		'Name' Name=EString
		('RosComponents' '(' (RosComponent+=ComponentInterface ( "," RosComponent+=ComponentInterface)*)? ')' )?
		('RosComponentStacks' '(' (ComponentStack+=ComponentStack ( "," ComponentStack+=ComponentStack)*)? ')' )?
		('TopicConnections' '{' (TopicConnections+=TopicConnection ( "," TopicConnections+=TopicConnection)*)? '}' )?
		('ServiceConnections' '{' (ServiceConnections+=ServiceConnection ( "," ServiceConnections+=ServiceConnection)*)? '}' )?
		('ActionConnections' '{' (ActionConnections+=ActionConnection ( "," ActionConnections+=ActionConnection)*)? '}' )?
		('Parameters' '{' (Parameter+=Parameter ( "," Parameter+=Parameter)*)? '}' )?
		

	'}';

TopicConnection returns TopicConnection:
	'TopicConnection'
	TopicName=EString
	'{'
		'From' '(' From+=[componentInterface::RosPublisher|EString] (',' From+=[componentInterface::RosPublisher|EString])* ')'
		'To' '(' To+=[componentInterface::RosSubscriber|EString] ( ',' To+=[componentInterface::RosSubscriber|EString])* ')'
	'}';

ServiceConnection returns ServiceConnection:
	'ServiceConnection'
	ServiceName=EString
	'{'
		'From' '(' From+=[componentInterface::RosServiceServer|EString] (',' From+=[componentInterface::RosServiceServer|EString])* ')'
		'To' To=[componentInterface::RosServiceClient|EString] 
	'}';

ActionConnection returns ActionConnection:
	'ActionConnection'
	ActionName=EString
	'{'
		'From' From=[componentInterface::RosActionServer|EString]
		'To'  To=[componentInterface::RosActionClient|EString] 
	'}';


EString returns ecore::EString:
	STRING | ID;

ComponentStack returns ComponentStack:
	'ComponentStack'
	'{'
		'name' Name=EString
		('SafetyLevel' SafetyLevel=('Non-critical'|'Critical'|'Alarm'))? //add separated by '|' new options for safety levels
		('RosComponents' '(' (RosComponent+=ComponentInterface ( "," RosComponent+=ComponentInterface)*)? ')' )?
		('QualityAttributes' '(' (QualityAttribute+=QualityAttribute ( "," QualityAttribute+=QualityAttribute)*)? ')' )?
		
	'}';
	
QualityAttribute returns QualityAttribute:
	'QualityAttribute'
		Name=EString
		('type' Type=ParameterType)?
		('value' Value=ParameterValue)?;
	
//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

ComponentInterface returns componentInterface::ComponentInterface:
	'ComponentInterface'
	'{'
		'name' name=EString
		('NameSpace' NameSpace=EString)?
		('FromRosNode' FromRosNode=[ros::Node|EString])?
		('RosPublishers' '{' rospublisher+=RosPublisher ( "," rospublisher+=RosPublisher)* '}' )?
		('RosSubscribers' '{' rossubscriber+=RosSubscriber ( "," rossubscriber+=RosSubscriber)* '}' )?
		('RosSrvServers' '{' rosserviceserver+=RosServiceServer ( "," rosserviceserver+=RosServiceServer)* '}' )?
		('RosSrvClients' '{' rosserviceclient+=RosServiceClient ( "," rosserviceclient+=RosServiceClient)* '}' )?
		('RosActionServers' '{' rosactionserver+=RosActionServer ( "," rosactionserver+=RosActionServer)* '}' )?
		('RosActionClients' '{' rosactionclient+=RosActionClient ( "," rosactionclient+=RosActionClient)* '}' )?
		('RosParameters' '{' rosparameter+=RosParameter ( "," rosparameter+=RosParameter)* '}' )?
		
	'}';


RosPublisher returns componentInterface::RosPublisher:
	{componentInterface::RosPublisher}
	'RosPublisher'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefPublisher' publisher=[ros::Publisher|EString]
	'}';

RosSubscriber returns componentInterface::RosSubscriber:
	{componentInterface::RosSubscriber}
	'RosSubscriber'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefSubscriber' subscriber=[ros::Subscriber|EString]
	'}';

RosServiceServer returns componentInterface::RosServiceServer:
	{componentInterface::RosServiceServer}
	'RosServiceServer'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefServer' srvserver=[ros::ServiceServer|EString]
	'}';

RosServiceClient returns componentInterface::RosServiceClient:
	{componentInterface::RosServiceClient}
	'RosServiceClient'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefClient' srvclient=[ros::ServiceClient|EString]
	'}';

RosActionServer returns componentInterface::RosActionServer:
	{componentInterface::RosActionServer}
	'RosActionServer'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefServer' actserver=[ros::ActionServer|EString]
	'}';

RosActionClient returns componentInterface::RosActionClient:
	{componentInterface::RosActionClient}
	'RosActionClient'
	(name=EString)?
	'{'
		('ns' ns=EString)?
		'RefClient' actclient=[ros::ActionClient|EString]
	'}';
	
RosParameter returns componentInterface::RosParameter:
{componentInterface::RosParameter}
'RosParameter'
(name=EString)?
'{'
	('ns' ns=EString)?
	'RefParameter' parameter=[ros::Parameter|EString]
	('value' value=ParameterValue)?
'}';


//PARAMETERS

Parameter returns ros::Parameter:
	'Parameter'
	'{'
		'name' name=EString
		('NameSpace' namespace=Namespace)?
		('type' type=ParameterType)?
		('value' value=ParameterValue)?
	'}';
	
ParameterType returns ros::ParameterType:
	ParameterListType | ParameterStructType | ParameterIntegerType | ParameterStringType | ParameterDoubleType | ParameterBooleanType | ParameterBase64Type | ParameterArrayType; // | ParameterDateType;

ParameterValue returns ros::ParameterValue:
	ParameterString | ParameterBase64 | ParameterInteger | ParameterDouble | ParameterBoolean | ParameterList | ParameterStruct; // | ParameterDate;


ParameterListType returns ros::ParameterListType:
	{ros::ParameterListType}
	'List'
	'{'	
		sequence+=ParameterType ( ',' sequence+=ParameterType )*
	'}';

ParameterStructType returns ros::ParameterStructType:
	{ros::ParameterStructType}
	'Struct'
	'{'
		parameterstructypetmember+=ParameterStructTypeMember ( "," parameterstructypetmember+=ParameterStructTypeMember)*
	'}';

ParameterIntegerType returns ros::ParameterIntegerType:
	{ros::ParameterIntegerType}
	'Integer'
	('default' default=ParameterInteger)?;

ParameterStringType returns ros::ParameterStringType:
	{ros::ParameterStringType}
	'String'
	('default' default=ParameterString)?;

ParameterDoubleType returns ros::ParameterDoubleType:
	{ros::ParameterDoubleType}
	'Double'
	('default' default=ParameterDouble)?;

ParameterDateType returns ros::ParameterDateType:
	{ros::ParameterDateType}
	'Date'
	('default' default=ParameterDate)?;

ParameterBooleanType returns ros::ParameterBooleanType:
	{ros::ParameterBooleanType}
	'Boolean'
	('default' default=ParameterBoolean)?;

ParameterBase64Type returns ros::ParameterBase64Type:
	{ros::ParameterBase64Type}
	'Base64'
	('default' default=ParameterBase64)?;

ParameterAnyType returns ros::ParameterAnyType:
	{ros::ParameterAnyType}
	'Any'
	('default' default=ParameterAny)?;

ParameterArrayType returns ros::ParameterArrayType:
	'Array'
	'{'
		'type' type=ParameterType
		('default' default=ParameterList)?
	'}';

ParameterList returns ros::ParameterSequence:
	{ros::ParameterSequence}
		'{'	value+=ParameterValue ( ',' value+=ParameterValue )* '}'
;

ParameterAny returns ros::ParameterAny:
	{ros::ParameterAny}
	'ParameterAny'
	'{'
		('value' value=EString)?
	'}';

ParameterString returns ros::ParameterString:
	value=EString
;

ParameterBase64 returns ros::ParameterBase64:
	value=Base64Binary
;

ParameterInteger returns ros::ParameterInteger:
	value=Integer0
;

ParameterDouble returns ros::ParameterDouble:
	value=Double0
;

ParameterBoolean returns ros::ParameterBoolean:
	value=boolean0
;


ParameterDate returns ros::ParameterDate:
	value=DateTime0
	;


ParameterStruct returns ros::ParameterStruct:
	{ros::ParameterStruct} 
		('{' value+=ParameterStructMember  ( "," '{' value+=ParameterStructMember '}')*  '}' )?
;

ParameterStructMember returns ros::ParameterStructMember:
	name=EString
	'{'
		'value' value=ParameterValue
	'}';


ParameterStructTypeMember returns ros::ParameterStructTypeMember:
		name=EString
		type=ParameterType
	;


//PARAMETERS PRIMITIVES TYPES
terminal fragment DIGIT: '0'..'9';

terminal BINARY: ('0b'|'0B')('0'|'1')+;

terminal BOOLEAN: 'true'|'false';
terminal DOUBLE returns ecore::EDouble: DECINT (('.' DIGIT*) | (('.' DIGIT*)? ('E'|'e') ('-'|'+')? DECINT));  // Use terminal to avoid 'e' turning into a keyword
terminal DECINT: '0' | ('1'..'9' DIGIT*) | ('-''0'..'9' DIGIT*) ;
terminal DAY:'1'..'9' | '1'..'3' '0'..'9';
terminal MONTH:'1'..'9' | '1' '0'..'2';
terminal YEAR:'0'..'2' '0'..'9' '0'..'9' '0'..'9';
terminal HOUR: ('0'..'1')('0'..'9') | ('2')('0'..'3');
terminal MIN_SEC:('0'..'5')('0'..'9');
terminal DATE_TIME: YEAR'-'MONTH'-'DAY'T'HOUR':'MIN_SEC':'MIN_SEC;

Base64Binary returns type::Base64Binary:
	BINARY ;

boolean0 returns type::Boolean:
	BOOLEAN;

Double0 returns type::Double:
	DOUBLE;

Integer0 returns type::Int:
	DECINT;

DateTime0 returns type::DateTime:
	DATE_TIME;
	
//NAMESPACES

Namespace returns ros::Namespace:
	GlobalNamespace | RelativeNamespace_Impl | PrivateNamespace;


GlobalNamespace returns ros::GlobalNamespace:
	{ros::GlobalNamespace}
	'GlobalNamespace'
	'{'
		('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
	'}';

RelativeNamespace_Impl returns ros::RelativeNamespace:
	{ros::RelativeNamespace}
	'RelativeNamespace'
	'{'
		('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
	'}';

PrivateNamespace returns ros::PrivateNamespace:
	{ros::PrivateNamespace}
	'PrivateNamespace'
	'{'
		('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
	'}';

GraphName returns ros::GraphName:
	'GraphName' ;
