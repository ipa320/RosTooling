/**
 */
package system.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import system.util.RossystemAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class RossystemItemProviderAdapterFactory extends RossystemAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public RossystemItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all {@link system.System} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SystemItemProvider systemItemProvider;

    /**
     * This creates an adapter for a {@link system.System}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSystemAdapter() {
        if (systemItemProvider == null) {
            systemItemProvider = new SystemItemProvider(this);
        }

        return systemItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.Rossystem} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RossystemItemProvider rossystemItemProvider;

                /**
     * This creates an adapter for a {@link system.Rossystem}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRossystemAdapter() {
        if (rossystemItemProvider == null) {
            rossystemItemProvider = new RossystemItemProvider(this);
        }

        return rossystemItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link system.Process} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ProcessItemProvider processItemProvider;

    /**
     * This creates an adapter for a {@link system.Process}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createProcessAdapter() {
        if (processItemProvider == null) {
            processItemProvider = new ProcessItemProvider(this);
        }

        return processItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.RosNode} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosNodeItemProvider rosNodeItemProvider;

    /**
     * This creates an adapter for a {@link system.RosNode}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosNodeAdapter() {
        if (rosNodeItemProvider == null) {
            rosNodeItemProvider = new RosNodeItemProvider(this);
        }

        return rosNodeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.RosInterface} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosInterfaceItemProvider rosInterfaceItemProvider;

    /**
     * This creates an adapter for a {@link system.RosInterface}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosInterfaceAdapter() {
        if (rosInterfaceItemProvider == null) {
            rosInterfaceItemProvider = new RosInterfaceItemProvider(this);
        }

        return rosInterfaceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.InterfaceReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InterfaceReferenceItemProvider interfaceReferenceItemProvider;

    /**
     * This creates an adapter for a {@link system.InterfaceReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createInterfaceReferenceAdapter() {
        if (interfaceReferenceItemProvider == null) {
            interfaceReferenceItemProvider = new InterfaceReferenceItemProvider(this);
        }

        return interfaceReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.RosPublisherReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosPublisherReferenceItemProvider rosPublisherReferenceItemProvider;

    /**
     * This creates an adapter for a {@link system.RosPublisherReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosPublisherReferenceAdapter() {
        if (rosPublisherReferenceItemProvider == null) {
            rosPublisherReferenceItemProvider = new RosPublisherReferenceItemProvider(this);
        }

        return rosPublisherReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.RosSubscriberReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosSubscriberReferenceItemProvider rosSubscriberReferenceItemProvider;

    /**
     * This creates an adapter for a {@link system.RosSubscriberReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosSubscriberReferenceAdapter() {
        if (rosSubscriberReferenceItemProvider == null) {
            rosSubscriberReferenceItemProvider = new RosSubscriberReferenceItemProvider(this);
        }

        return rosSubscriberReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.RosServiceServerReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosServiceServerReferenceItemProvider rosServiceServerReferenceItemProvider;

    /**
     * This creates an adapter for a {@link system.RosServiceServerReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosServiceServerReferenceAdapter() {
        if (rosServiceServerReferenceItemProvider == null) {
            rosServiceServerReferenceItemProvider = new RosServiceServerReferenceItemProvider(this);
        }

        return rosServiceServerReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.RosServiceClientReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosServiceClientReferenceItemProvider rosServiceClientReferenceItemProvider;

                /**
     * This creates an adapter for a {@link system.RosServiceClientReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosServiceClientReferenceAdapter() {
        if (rosServiceClientReferenceItemProvider == null) {
            rosServiceClientReferenceItemProvider = new RosServiceClientReferenceItemProvider(this);
        }

        return rosServiceClientReferenceItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link system.RosActionServerReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosActionServerReferenceItemProvider rosActionServerReferenceItemProvider;

    /**
     * This creates an adapter for a {@link system.RosActionServerReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosActionServerReferenceAdapter() {
        if (rosActionServerReferenceItemProvider == null) {
            rosActionServerReferenceItemProvider = new RosActionServerReferenceItemProvider(this);
        }

        return rosActionServerReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.RosActionClientReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosActionClientReferenceItemProvider rosActionClientReferenceItemProvider;

    /**
     * This creates an adapter for a {@link system.RosActionClientReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosActionClientReferenceAdapter() {
        if (rosActionClientReferenceItemProvider == null) {
            rosActionClientReferenceItemProvider = new RosActionClientReferenceItemProvider(this);
        }

        return rosActionClientReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.RosParameterReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosParameterReferenceItemProvider rosParameterReferenceItemProvider;

    /**
     * This creates an adapter for a {@link system.RosParameterReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosParameterReferenceAdapter() {
        if (rosParameterReferenceItemProvider == null) {
            rosParameterReferenceItemProvider = new RosParameterReferenceItemProvider(this);
        }

        return rosParameterReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.RosParameter} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosParameterItemProvider rosParameterItemProvider;

    /**
     * This creates an adapter for a {@link system.RosParameter}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosParameterAdapter() {
        if (rosParameterItemProvider == null) {
            rosParameterItemProvider = new RosParameterItemProvider(this);
        }

        return rosParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.RosSystemConnection} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosSystemConnectionItemProvider rosSystemConnectionItemProvider;

                /**
     * This creates an adapter for a {@link system.RosSystemConnection}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosSystemConnectionAdapter() {
        if (rosSystemConnectionItemProvider == null) {
            rosSystemConnectionItemProvider = new RosSystemConnectionItemProvider(this);
        }

        return rosSystemConnectionItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link system.RosConnection} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosConnectionItemProvider rosConnectionItemProvider;

    /**
     * This creates an adapter for a {@link system.RosConnection}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosConnectionAdapter() {
        if (rosConnectionItemProvider == null) {
            rosConnectionItemProvider = new RosConnectionItemProvider(this);
        }

        return rosConnectionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link system.RosTopicConnection} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosTopicConnectionItemProvider rosTopicConnectionItemProvider;

                /**
     * This creates an adapter for a {@link system.RosTopicConnection}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosTopicConnectionAdapter() {
        if (rosTopicConnectionItemProvider == null) {
            rosTopicConnectionItemProvider = new RosTopicConnectionItemProvider(this);
        }

        return rosTopicConnectionItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link system.RosServiceConnection} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosServiceConnectionItemProvider rosServiceConnectionItemProvider;

                /**
     * This creates an adapter for a {@link system.RosServiceConnection}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosServiceConnectionAdapter() {
        if (rosServiceConnectionItemProvider == null) {
            rosServiceConnectionItemProvider = new RosServiceConnectionItemProvider(this);
        }

        return rosServiceConnectionItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link system.RosActionConnection} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RosActionConnectionItemProvider rosActionConnectionItemProvider;

                /**
     * This creates an adapter for a {@link system.RosActionConnection}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRosActionConnectionAdapter() {
        if (rosActionConnectionItemProvider == null) {
            rosActionConnectionItemProvider = new RosActionConnectionItemProvider(this);
        }

        return rosActionConnectionItemProvider;
    }

                /**
     * This keeps track of the one adapter used for all {@link system.SubSystem} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SubSystemItemProvider subSystemItemProvider;

                                                                /**
     * This creates an adapter for a {@link system.SubSystem}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSubSystemAdapter() {
        if (subSystemItemProvider == null) {
            subSystemItemProvider = new SubSystemItemProvider(this);
        }

        return subSystemItemProvider;
    }

                                                                /**
     * This returns the root adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public void dispose() {
        if (systemItemProvider != null) systemItemProvider.dispose();
        if (rossystemItemProvider != null) rossystemItemProvider.dispose();
        if (processItemProvider != null) processItemProvider.dispose();
        if (rosNodeItemProvider != null) rosNodeItemProvider.dispose();
        if (rosInterfaceItemProvider != null) rosInterfaceItemProvider.dispose();
        if (interfaceReferenceItemProvider != null) interfaceReferenceItemProvider.dispose();
        if (rosPublisherReferenceItemProvider != null) rosPublisherReferenceItemProvider.dispose();
        if (rosSubscriberReferenceItemProvider != null) rosSubscriberReferenceItemProvider.dispose();
        if (rosServiceServerReferenceItemProvider != null) rosServiceServerReferenceItemProvider.dispose();
        if (rosServiceClientReferenceItemProvider != null) rosServiceClientReferenceItemProvider.dispose();
        if (rosActionServerReferenceItemProvider != null) rosActionServerReferenceItemProvider.dispose();
        if (rosActionClientReferenceItemProvider != null) rosActionClientReferenceItemProvider.dispose();
        if (rosParameterReferenceItemProvider != null) rosParameterReferenceItemProvider.dispose();
        if (rosParameterItemProvider != null) rosParameterItemProvider.dispose();
        if (rosSystemConnectionItemProvider != null) rosSystemConnectionItemProvider.dispose();
        if (rosConnectionItemProvider != null) rosConnectionItemProvider.dispose();
        if (rosTopicConnectionItemProvider != null) rosTopicConnectionItemProvider.dispose();
        if (rosServiceConnectionItemProvider != null) rosServiceConnectionItemProvider.dispose();
        if (rosActionConnectionItemProvider != null) rosActionConnectionItemProvider.dispose();
        if (subSystemItemProvider != null) subSystemItemProvider.dispose();
    }

}
